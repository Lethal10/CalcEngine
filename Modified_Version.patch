Index: src/com/lethal9/getorganized/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/lethal9/getorganized/Main.java	(revision 05bb96f7f5ceb3a4707ef57bdb2181cfdf39d01f)
+++ src/com/lethal9/getorganized/Main.java	(date 1578682006477)
@@ -3,37 +3,52 @@
 public class Main {
 
     public static void main(String[] args) {
-      double val1 = 100.0d;
-      double val2 = 50.0d ;
-      double result;
-      char opCode = 'd';
+        double[] leftVals = {100.0d , 25.0d , 225.0d , 11.0d};
+        double[] rightVals = {50.0d , 92.0d , 17.0d , 3.0d};
+        char[] opCodes = {'d', 'a', 's', 'm'};
+        double[] results = new double[opCodes.length];
+
 
-      if (opCode == 'm')
-          result = val1 + val2;
 
-      else if (opCode == 's' )
-          result = val1 - val2;
+        for (int i = 0; i < opCodes.length; i++) {
 
-      else if (opCode == 'd' ) {
-          result = val2 != 0.0d ? val1 / val2 : 0.0d;
+            switch (opCodes[i]) {
+            case 'a' :
+                results[i] = leftVals[i] + rightVals[i];
+                break;
+
+            case 's':
+                results[i] = leftVals[i] - rightVals[i];
+                break;
+
+            case 'd':
+                results[i] = rightVals[i] != 0.0d ? leftVals[i] / rightVals[i] : 0.0d;
 
       /*if (val2 != 0.0d)
           result = val1 / val2 ;
       else
           result = 0.0d;
 
-       */}
+       */
 
-      else if (opCode == 'm' )
-          result = val1 * val2;
+            break;
+            case 'm':
+                results[i] = leftVals[i] * rightVals[i];
+                break;
 
 
-      else {
-          System.out.println("Error - invalid opCode");
-          result = 0.0d;
-      }
-      System.out.println(result);
+            default:
+                System.out.println("Error - invalid opCode");
+                results[i] = 0.0d;
+                break;
+
+            }
+            for (double theResult : results) {
+                System.out.println("result = ");
+                System.out.println(theResult);
 
 
-    }
-}
+            }
+        }
+    }
+}
\ No newline at end of file
